---
layout:     post
title:      "내가 생각하는 Java OOP"
subtitle:   " \"Java의 OOP에 대하여(1) \""
date:       2021-08-30 12:00:00
author:     "H37-J"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - Java
---

# 내가 생각하는 OOP란 (1)...

## 요구사항 
* 객체는 Model, Setter, Getter외에 다른 메서드가 없어야 한다
* 객체는 자신의 변경, 값 반환등의 최소한의 역할을 해야한다
* 모델은 언제든지 추가 될 수 있다

## Encapsulation
private를 사용하면 외부 클래스에서 접근 할 수 없게 만든다.
하지만 setter,getter를 사용하면 가능하다

```java
public class Person{

    String name;

    public void setName(String name){
        thisname=name;
    }

    public String getName(){
        return name;
    }

    public static void main(String[] args){
        Person person = new Person();
        person.name="test"; //error
        person.setName("test);
    }
}

```

## 추상화(abstract)
* 추상클래스는 객체를 생성 할 수 없다. 다른 클래스로부터 상속되어질 뿐이다
* 메서드에서 구현체가 없다. 이는 상속한 클래스에서 구현한다.

```java

abstract class Person{
    public void sleep();

    public void work(){
        System.out.println("work");
    }
}
```